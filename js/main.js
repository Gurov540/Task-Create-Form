// –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ HTML-–¥–æ–∫—É–º–µ–Ω—Ç–∞
document.addEventListener("DOMContentLoaded", () => {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ DOM
  const addBtn = document.getElementById("add-btn");
  const tasksContainer = document.querySelector(".tasks");
  const emptyState = document.getElementById("empty-state");

  // –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –∑–∞–¥–∞—á–∏
  const titleInput = document.getElementById("task-title");
  const descInput = document.getElementById("task-description");
  const dateInput = document.getElementById("task-date");
  const typeInput = document.getElementById("task-type");
  const importantInput = document.getElementById("task-important");

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ –ø–æ–ª–µ "–î–∞—Ç–∞"
  const today = new Date();
  const formattedDate = today.toISOString().split("T")[0]; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD
  dateInput.value = formattedDate;

  // –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á
  const typeNames = {
    work: "–†–∞–±–æ—Ç–∞",
    study: "–£—á—ë–±–∞",
    sport: "–°–ø–æ—Ä—Ç",
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
  function formatDate(dateStr) {
    if (!dateStr) return "–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞";
    const date = new Date(dateStr);
    return date.toLocaleDateString("ru-RU", {
      day: "numeric",
      month: "long",
      year: "numeric",
    });
  }

  // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
  function resetForm() {
    titleInput.value = "";
    descInput.value = "";
    dateInput.value = formattedDate;
    typeInput.value = "work";
    importantInput.checked = false;
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ localStorage (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
  function loadTasks() {
    const saved = localStorage.getItem("tasks");
    return saved ? JSON.parse(saved) : []; // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Äî —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å, –∏–Ω–∞—á–µ –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –≤ localStorage
  function saveTasks(tasks) {
    localStorage.setItem("tasks", JSON.stringify(tasks));
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –µ—ë –≤ DOM
  function createTaskCard(task, save = false) {
    const { id, title, description, date, type, important } = task;

    // –°–æ–∑–¥–∞—ë–º HTML-—ç–ª–µ–º–µ–Ω—Ç –∑–∞–¥–∞—á–∏
    const card = document.createElement("div");
    card.className = `task-card ${type}`;
    if (important) card.classList.add("important");

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–¥–∞—á–∏ –≤ –∞—Ç—Ä–∏–±—É—Ç data-id
    card.dataset.id = id;

    // HTML-—Ä–∞–∑–º–µ—Ç–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á–∏
    card.innerHTML = `
      <div class="task-header">
          <h3 class="task-title">${title}</h3>
          <span class="task-type type-${type}">${typeNames[type]}</span>
      </div>
      <div class="task-body">
          <p class="task-description">${
            description || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          }</p>
      </div>
      <div class="task-footer">
          <span class="task-date">${formatDate(date)}</span>
          <button class="delete-btn">üóëÔ∏è</button>
      </div>
    `;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
    card.querySelector(".delete-btn").addEventListener("click", () => {
      card.remove(); // –£–¥–∞–ª—è–µ–º DOM-—ç–ª–µ–º–µ–Ω—Ç

      // –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏–∑ localStorage –ø–æ id
      const tasks = loadTasks().filter((t) => t.id !== id);
      saveTasks(tasks);

      // –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å "—Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
      if (!tasksContainer.querySelector(".task-card")) {
        emptyState.style.display = "block";
      }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–¥–∞—á
    tasksContainer.insertBefore(card, emptyState);
    emptyState.style.display = "none";

    // –ï—Å–ª–∏ —Ñ–ª–∞–≥ `save` ‚Äî true, —Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É –≤ localStorage
    if (save) {
      const tasks = loadTasks(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏
      tasks.push(task); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é
      saveTasks(tasks); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å"
  addBtn.addEventListener("click", () => {
    const title = titleInput.value.trim(); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã

    // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!title) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏");
      return;
    }

    // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏
    const task = {
      id: Date.now(), // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
      title,
      description: descInput.value,
      date: dateInput.value,
      type: typeInput.value,
      important: importantInput.checked,
    };

    // –°–æ–∑–¥–∞—ë–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–¥–∞—á—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    createTaskCard(task, true);

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    resetForm();
  });

  // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ localStorage
  const storedTasks = loadTasks();
  if (storedTasks.length > 0) {
    storedTasks.forEach((task) => createTaskCard(task));
  } else {
    emptyState.style.display = "block"; // –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ—Ç ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å "—Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
  }
});
