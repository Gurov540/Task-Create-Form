// –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ HTML-–¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–¥–∞
document.addEventListener("DOMContentLoaded", () => {
  // –ü–æ–ª—É—á–∞–µ–º DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
  const addBtn = document.getElementById("add-btn");
  const tasksContainer = document.querySelector(".tasks");
  const emptyState = document.getElementById("empty-state");

  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
  const titleInput = document.getElementById("task-title");
  const descInput = document.getElementById("task-description");
  const dateInput = document.getElementById("task-date");
  const typeInput = document.getElementById("task-type");
  const importantInput = document.getElementById("task-important");

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const today = new Date();
  const formattedDate = today.toISOString().split("T")[0];
  dateInput.value = formattedDate;

  // –ù–∞–∑–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á –Ω–∞ —Ä—É—Å—Å–∫–æ–º
  const typeNames = {
    work: "–†–∞–±–æ—Ç–∞",
    study: "–£—á—ë–±–∞",
    sport: "–°–ø–æ—Ä—Ç",
  };

  // –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 21 –∏—é–Ω—è 2025 –≥.)
  function formatDate(dateStr) {
    if (!dateStr) return "–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞";
    const date = new Date(dateStr);
    return date.toLocaleDateString("ru-RU", {
      day: "numeric",
      month: "long",
      year: "numeric",
    });
  }

  // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏–π —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
  function resetForm() {
    titleInput.value = "";
    descInput.value = "";
    dateInput.value = formattedDate;
    typeInput.value = "work";
    importantInput.checked = false;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ localStorage (–º–∞—Å—Å–∏–≤)
  function loadTasks() {
    const saved = localStorage.getItem("tasks");
    return saved ? JSON.parse(saved) : [];
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∑–∞–¥–∞—á –≤ localStorage
  function saveTasks(tasks) {
    localStorage.setItem("tasks", JSON.stringify(tasks));
  }

  // üî• –§–£–ù–ö–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –ó–ê–î–ê–ß–ò –ü–û ID
  function deleteTaskById(id) {
    // –£–¥–∞–ª–µ–Ω–∏–µ DOM-—ç–ª–µ–º–µ–Ω—Ç–∞ —Å –Ω—É–∂–Ω—ã–º data-id
    const card = document.querySelector(`.task-card[data-id="${id}"]`);
    if (card) card.remove();

    // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ localStorage
    const updatedTasks = loadTasks().filter((task) => task.id !== id);
    saveTasks(updatedTasks);

    // –ï—Å–ª–∏ –∑–∞–¥–∞—á –±–æ–ª—å—à–µ –Ω–µ—Ç ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "—Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
    if (!document.querySelector(".task-card")) {
      emptyState.style.display = "block";
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á–∏
  function createTaskCard(task, save = false) {
    const { id, title, description, date, type, important } = task;

    // –°–æ–∑–¥–∞—ë–º DOM-—ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
    const card = document.createElement("div");
    card.className = `task-card ${type}`;
    if (important) card.classList.add("important");

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id —á–µ—Ä–µ–∑ data-–∞—Ç—Ä–∏–±—É—Ç
    card.dataset.id = id;

    // HTML —Ä–∞–∑–º–µ—Ç–∫–∞ –∑–∞–¥–∞—á–∏
    card.innerHTML = `
      <div class="task-header">
          <h3 class="task-title">${title}</h3>
          <span class="task-type type-${type}">${typeNames[type]}</span>
      </div>
      <div class="task-body">
          <p class="task-description">${
            description || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          }</p>
      </div>
      <div class="task-footer">
          <span class="task-date">${formatDate(date)}</span>
          <button class="delete-btn"><i class="fas fa-trash"></i></button>
      </div>
    `;

    // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
    card.querySelector(".delete-btn").addEventListener("click", () => {
      deleteTaskById(id); // –í—ã–∑—ã–≤–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è
    });

    // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–¥–∞—á–∏ –≤ DOM –ø–µ—Ä–µ–¥ –±–ª–æ–∫–æ–º emptyState
    tasksContainer.insertBefore(card, emptyState);
    emptyState.style.display = "none";

    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–¥–∞—á—É –≤ localStorage
    if (save) {
      const tasks = loadTasks();
      tasks.push(task);
      saveTasks(tasks);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å"
  addBtn.addEventListener("click", () => {
    const title = titleInput.value.trim();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—É—Å—Ç–æ–µ ‚Äî –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!title) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏");
      return;
    }

    // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
    const task = {
      id: Date.now(), // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (–ø–æ –≤—Ä–µ–º–µ–Ω–∏)
      title,
      description: descInput.value,
      date: dateInput.value,
      type: typeInput.value,
      important: importantInput.checked,
    };

    // –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–¥–∞—á–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë
    createTaskCard(task, true);

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    resetForm();
  });

  // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–¥–∞—á–∏ –∏–∑ localStorage
  const storedTasks = loadTasks();
  if (storedTasks.length > 0) {
    storedTasks.forEach((task) => createTaskCard(task));
  } else {
    emptyState.style.display = "block";
  }
});
